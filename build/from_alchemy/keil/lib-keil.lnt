///////////////////////////////////////////////////////////////////////////////
// Lint policy file for the Keil CARM compiler
///////////////////////////////////////////////////////////////////////////////
 
// The following keywords are ignored by lint

+rw(_up_to_brackets)
-d__attribute__=_up_to_brackets	// __attribute__
-d__declspec=_up_to_brackets		// __declspec
-d__swi=_up_to_brackets			// __swi

+rw(_ignore_init)         // activate this keyword
-d__asm=_ignore_init
-d__irq=_ignore_init				// __irq

+rw(_gobble)
-d__pure=_gobble					// __pure
-d__value_in_regs=_gobble			// __value_in_regs
-d__softfp=_gobble					// __softfp
-d__isr=_gobble           // defines __isr    to be a _gobble
-d__task=_gobble          // defines __task   to be a _gobble
-d__at=_gobble            // defines __at     to be a _gobble

-d__ram=
-d__packed=
-d__restrict=

-d__svc()=                   // defined to be compiler extension
-d__nop()=                   // defined to be compiler extension
-d__wfi()=                   // defined to be compiler extension
-d__wfe()=                   // defined to be compiler extension
-d__sev()=                   // defined to be compiler extension  (BLE addition)
-d__dmb()=                   // defined to be compiler extension
-d__enable_irq()=            // defined to be compiler extension
-d__disable_irq()=           // defined to be compiler extension
-d__asm__()=                // define to be a compiler extension

 
// Ignore messages generated in headers in the keil include directory
+libdir(C:\Keil_v5\ARM\ARMCC\include\*)

-sp4                      // size of pointer is 4 bytes
+d__sizeof_int=4          // set __sizeof_int to 4 bytes
+d__sizeof_long=4         // set __sizeof_long to 4 bytes
+d__sizeof_ptr=4          // set __sizeof_ptr to 4 bytes

+d__arm__=1               // this is an ARM compiler
+d__CC_ARM=1              // this is an ARM compiler
+d__thumb__=1             // this is set when compiling in thumb mode
+d__thumb=1               // this is set when compiling in thumb mode
+d__ARMCC_VERSION=502028  // set RealView compiler version to 5.02 build 28
+d__DATE__="AUG 22 2012"  // set RealView compiler date macro
+d__TIME__="11:55:00"     // set RealView compiler time macro
+d__FILE__="MYFILE.C"     // set RealView compiler file macro
+d__MODULE__="MYFILE.C"   // set RealView compiler module macro
+d__LINE__=100            // set RealView compiler line macro
+d__STDC__=1              // set RealView compiler STDC macro
+d__NO_EDG_EXCEPTION_CLASSES
+d__NEW_STDH

-esym(123,getchar,putchar) // inhibit error 123: Macro defined with arguments
-emacro(413,offsetof)  // use of NULL pointer creates a stir
-emacro(545,offsetof)  // addressing an array member is OK
-emacro(586,offsetof)  // MISRA 18-2-1 this macro is deprecated but we use it for debug purpose only

/***********       Begin Pragma Emulation        ***********/
//
+pragma( inline, macro )
-d"pragma_inline()=inline"

+pragma( pack, macro )
-d"pragma_pack()=__packed"

+pragma( error, message )
+pragma( message, message )
+pragma( include_alias, include_alias )

// Other pragmas will be ignored.
//
/***********       End Pragma Emulation          ***********/
