/*
 * test_cosem_read_by_block.cpp
 *
 *  Created on: 3 nov. 2017
 *      Author: anthony
 */

#include "os_util.h"
#include "hdlc.h"

#include "catch.hpp"
#include <iostream>
#include <cstdlib>
#include <cstring>




void FirstBlockDecoder()
{
    static const char first_block

    // transform the hexadecimal string into an array of integers
    int sz = sizeof(first_block);

    size_t packet_size = sz/2U;
    uint8_t *packet = (uint8_t *) malloc(packet_size);

    if (packet != NULL)
    {
        int ret;
        uint8_t *packet_ptr = packet;

        hex2bin(first_block, (char *)packet, sz);


        free(packet);
    }
    else
    {
       printf("Cannot allocate memory!\r\n");
    }

}


TEST_CASE( "COSEM_READ", "[Read by block]" )
{
    puts("\r\n--------------------------  COSEM TEST READ 1  --------------------------\r\n");
    FirstBlockDecoder();
}


